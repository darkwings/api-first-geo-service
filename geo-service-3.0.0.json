{
  "openapi": "3.0.0",
  "x-stoplight": {
    "id": "3diqa0zi4eurm"
  },
  "info": {
    "title": "geo-service",
    "version": "1.0",
    "contact": {
      "email": "support@acme.com",
      "name": "Acme",
      "url": "https://acme.com"
    },
    "description": "API exposed by the new GEO Service, which allows to query for cities given (country/region) or (country/region/province).\n\nThe IDs shown in the examples are examples. For simplicity some examples show subsequent IDs, but IDs should not be autoincremental, for security reasons it's better to use UUID instead.\n\n**The names of countries, regions and cities returned by all endpoints are all lowercase**. It's up to users to format the name: capitalize first letter or uppercase."
  },
  "servers": [
    {
      "url": "http://localhost:8080/geo",
      "description": "Local"
    }
  ],
  "paths": {
    "/countries": {
      "get": {
        "summary": "All Countries",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Country",
                        "x-stoplight": {
                          "id": "vpkrf5u530zds"
                        },
                        "type": "object",
                        "description": "Represents a country",
                        "properties": {
                          "country_id": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9-_]+",
                            "maxLength": 10,
                            "description": "ISO code of the country (it, en, de etc.)"
                          },
                          "name": {
                            "type": "string",
                            "pattern": "[A-Za-z '-]+",
                            "maxLength": 100,
                            "description": "The name reflects the value of 'lang' param"
                          },
                          "phone_code": {
                            "type": "string",
                            "pattern": "[0-9]*",
                            "maxLength": 3,
                            "description": "The phone code of the country (link 39 for Italy)"
                          },
                          "deleted": {
                            "type": "boolean",
                            "default": false,
                            "description": "Set to true is we're managing a deleted country like Yugoslavia"
                          }
                        },
                        "required": [
                          "country_id",
                          "name"
                        ]
                      }
                    },
                    "links": {
                      "type": "array",
                      "items": {
                        "title": "Link",
                        "x-stoplight": {
                          "id": "k4ckz809rljnf"
                        },
                        "type": "object",
                        "description": "  HATEOAS link",
                        "properties": {
                          "href": {
                            "type": "string",
                            "format": "uri",
                            "maxLength": 512
                          },
                          "rel": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ]+",
                            "maxLength": 20
                          }
                        }
                      }
                    },
                    "metadata": {
                      "title": "Metadata",
                      "x-stoplight": {
                        "id": "oib14d6qzb5yt"
                      },
                      "type": "object",
                      "description": "Associated with collection responses, but only if needed. As an example, for Province API which will return a small number of results, metadata is quite unuseful.",
                      "properties": {
                        "current_offset": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 100000,
                          "format": "int32",
                          "description": "The current offset of the results shown"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int32",
                          "minimum": 0,
                          "maximum": 10000
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+",
                  "maxLength": 512
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "maxLength": 512,
                  "pattern": "^[A-Za-z0-9-_]+"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "maxLength": 512,
                  "pattern": "^[A-Za-z0-9-_]+"
                }
              }
            }
          },
          "500": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+",
                  "maxLength": 512
                }
              }
            }
          }
        },
        "operationId": "get-countries",
        "description": "Get all countries. The names are resolved based on requested language (default `it`).\n\nThis API is paginated. The parameters `limit` and `offset` could be omitted but default values will be used. The 'links' section includes the link to navigate the collection.\n\nSee [HATEOAS](https://restfulapi.net/hateoas/) for further informations about `links` section.",
        "parameters": [
          {
            "name": "lang",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "it",
              "pattern": "^[a-z]{2}(-[a-z]{2})?$",
              "minLength": 2,
              "maxLength": 5
            },
            "description": "the language in which we want to receive the data, expressed in iso 639-1 format",
            "allowEmptyValue": true
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 0,
              "maximum": 50,
              "default": 20
            },
            "description": "the page size, for collection APIs",
            "allowEmptyValue": true
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 100000,
              "default": 0
            },
            "description": "the offset to start",
            "allowEmptyValue": true
          }
        ]
      },
      "parameters": []
    },
    "/countries/{country_id}/regions": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "pattern": "[A-Z]{2}",
            "maxLength": 2
          },
          "name": "country_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Regions by country",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Region",
                        "x-stoplight": {
                          "id": "ik33rb3jg6t03"
                        },
                        "type": "object",
                        "description": "Region / State (for US or other federated countries).\n\nThis API does not force region_id to have a particular format, but implementors have to make sure it will be unique for that region state. It could be a random alphanumeric code ('abc012') or could be something that recalls countries (es 'us-ak' for Alaska, 'it-lo' for Lombardy etc). It is purely an implementor's choice, the important is that the code is unique.",
                        "properties": {
                          "region_id": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9-_]+",
                            "maxLength": 10,
                            "description": "The region ID. It MUST identify a region/state in unique way."
                          },
                          "name": {
                            "type": "string",
                            "pattern": "[A-Za-z '-]+",
                            "maxLength": 100,
                            "description": "The name reflects the value of 'lang' param"
                          },
                          "deleted": {
                            "type": "boolean",
                            "default": false,
                            "description": "Set to true is we're managing a deleted region"
                          },
                          "country_id": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9-_]+",
                            "maxLength": 10,
                            "description": "The country ID (ISO)"
                          }
                        },
                        "required": [
                          "region_id",
                          "name"
                        ]
                      }
                    },
                    "links": {
                      "type": "array",
                      "items": {
                        "title": "Link",
                        "x-stoplight": {
                          "id": "k4ckz809rljnf"
                        },
                        "type": "object",
                        "description": "  HATEOAS link",
                        "properties": {
                          "href": {
                            "type": "string",
                            "format": "uri",
                            "maxLength": 512
                          },
                          "rel": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ]+",
                            "maxLength": 20
                          }
                        }
                      }
                    },
                    "metadata": {
                      "title": "Metadata",
                      "x-stoplight": {
                        "id": "oib14d6qzb5yt"
                      },
                      "type": "object",
                      "description": "Associated with collection responses, but only if needed. As an example, for Province API which will return a small number of results, metadata is quite unuseful.",
                      "properties": {
                        "current_offset": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 100000,
                          "format": "int32",
                          "description": "The current offset of the results shown"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int32",
                          "minimum": 0,
                          "maximum": 10000
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+",
                  "maxLength": 512
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "maxLength": 512,
                  "pattern": "^[A-Za-z0-9-_]+"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "maxLength": 512,
                  "pattern": "^[A-Za-z0-9-_]+"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+",
                  "maxLength": 512
                }
              }
            }
          },
          "500": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+",
                  "maxLength": 512
                }
              }
            }
          }
        },
        "operationId": "get-api-geo-countries-country_code",
        "description": "Retrieves all the states/region of a country. For US (or a federated country like Germany), it returns the list of states. The names are resolved based on requested language (default `it`).\n\nThe `links` section includes the link to navigate the collection. It could be empty when results number is lower than `limit`.\n\nSee [HATEOAS](https://restfulapi.net/hateoas/) for further informations about `links` section.\n\nThe result is always ordered by name\n\nExample 1 shows italian regions when `lang=it`.\nExample 2 shows german lander when `lang=de`\nExample 3 shows italian regions when `lang=en` (notice the different order of the collection, if compared to the results when lang=it)\n",
        "parameters": [
          {
            "name": "lang",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "it",
              "pattern": "^[a-z]{2}(-[a-z]{2})?$",
              "minLength": 2,
              "maxLength": 5
            },
            "description": "the language in which we want to receive the data, expressed in iso 639-1 format",
            "allowEmptyValue": true
          }
        ]
      }
    },
    "/countries/{country_id}/regions/{region_id}/cities": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "pattern": "[A-Z]{2}",
            "maxLength": 2
          },
          "name": "country_id",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string",
            "pattern": "[A-Za-z0-9]+",
            "maxLength": 10
          },
          "name": "region_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Cities by region",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "City",
                        "x-stoplight": {
                          "id": "g1aqefhz9yjqa"
                        },
                        "type": "object",
                        "description": "A city. \n\nA deleted city is a city that no longer exists, possibly for a merge with other cities. Each city should have a unique ID.\n\nGiven that some big cities are associated to more zip codes, the field `zip_codes` is an array.",
                        "properties": {
                          "city_id": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9-_]+",
                            "maxLength": 10,
                            "description": "The city ID. It MUST identify a city in unique way"
                          },
                          "name": {
                            "type": "string",
                            "pattern": "[A-Za-z '-]+",
                            "maxLength": 100,
                            "description": "The name reflects the value of 'lang' param"
                          },
                          "zip_codes": {
                            "type": "array",
                            "description": "Some cities spreads through different zip codes, so we treat it as a list",
                            "maxItems": 100,
                            "items": {
                              "type": "string",
                              "pattern": "[0-9]+",
                              "maxLength": 10
                            }
                          },
                          "state_code": {
                            "type": "string",
                            "maxLength": 10,
                            "pattern": "[A-Za-z0-9]+",
                            "description": "The code used by owning state to identify the city."
                          },
                          "management_code": {
                            "type": "string",
                            "description": "The code used by authorities to identify the city. In Italy could be ISTAT code (known as 'Codice catastale')",
                            "pattern": "[A-Za-z0-9]+",
                            "maxLength": 10
                          },
                          "deleted": {
                            "type": "boolean",
                            "default": false,
                            "description": "Identifies deleted cities, that means cities that are no more valid because of merging with other cities or any other reason"
                          },
                          "extension": {
                            "type": "number",
                            "minimum": 0,
                            "example": 180.07,
                            "description": "The extension of the city, in square metres"
                          },
                          "inhabitants": {
                            "type": "integer",
                            "example": 11201,
                            "exclusiveMaximum": 100000000,
                            "exclusiveMinimum": 0,
                            "format": "int32",
                            "description": "The inhabitants of the city"
                          },
                          "country_id": {
                            "type": "string",
                            "description": "ISO code of country",
                            "pattern": "[A-Za-z0-9-_]+",
                            "maxLength": 10
                          },
                          "country_name": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 -']+",
                            "maxLength": 100
                          },
                          "region_id": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9-_]+",
                            "maxLength": 10,
                            "description": "The ID of the region"
                          },
                          "region_name": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 -']+",
                            "maxLength": 100
                          },
                          "province_id": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9-_]+",
                            "maxLength": 10,
                            "description": "Province ID, can be null when data is not available"
                          },
                          "province_name": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 -']+",
                            "maxLength": 100
                          }
                        },
                        "required": [
                          "city_id",
                          "name"
                        ]
                      }
                    },
                    "links": {
                      "type": "array",
                      "items": {
                        "title": "Link",
                        "x-stoplight": {
                          "id": "k4ckz809rljnf"
                        },
                        "type": "object",
                        "description": "  HATEOAS link",
                        "properties": {
                          "href": {
                            "type": "string",
                            "format": "uri",
                            "maxLength": 512
                          },
                          "rel": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ]+",
                            "maxLength": 20
                          }
                        }
                      }
                    },
                    "metadata": {
                      "title": "Metadata",
                      "x-stoplight": {
                        "id": "oib14d6qzb5yt"
                      },
                      "type": "object",
                      "description": "Associated with collection responses, but only if needed. As an example, for Province API which will return a small number of results, metadata is quite unuseful.",
                      "properties": {
                        "current_offset": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 100000,
                          "format": "int32",
                          "description": "The current offset of the results shown"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int32",
                          "minimum": 0,
                          "maximum": 10000
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+",
                  "maxLength": 512
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  },
                  "description": "A list of errors"
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+",
                  "maxLength": 512
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "maxLength": 512,
                  "pattern": "^[A-Za-z0-9-_]+"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "maxLength": 512,
                  "pattern": "^[A-Za-z0-9-_]+"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+",
                  "maxLength": 512
                }
              }
            }
          },
          "500": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+",
                  "maxLength": 512
                }
              }
            }
          }
        },
        "operationId": "cities-by-region",
        "description": "Returns the cities of a region. The names are resolved based on requested language (default `it`).\n\nThe `links` section includes the link to navigate the collection.\n\nSee [HATEOAS](https://restfulapi.net/hateoas/) for further informations about `links` section.",
        "parameters": [
          {
            "name": "lang",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "it",
              "pattern": "^[a-z]{2}(-[a-z]{2})?$",
              "minLength": 2,
              "maxLength": 5
            },
            "description": "the language in which we want to receive the data, expressed in iso 639-1 format",
            "allowEmptyValue": true
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 0,
              "maximum": 50,
              "default": 20
            },
            "description": "the page size, for collection APIs",
            "allowEmptyValue": true
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 100000,
              "default": 0
            },
            "description": "the offset to start",
            "allowEmptyValue": true
          }
        ]
      }
    },
    "/countries/{country_id}/regions/{region_id}/cities/{city_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "pattern": "[A-Z]{2}",
            "maxLength": 2
          },
          "name": "country_id",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string",
            "pattern": "[A-Za-z0-9]+",
            "maxLength": 10
          },
          "name": "region_id",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string",
            "pattern": "[A-Za-z0-9]+",
            "maxLength": 10
          },
          "name": "city_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "City detail by city ID and region",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "City",
                      "x-stoplight": {
                        "id": "g1aqefhz9yjqa"
                      },
                      "type": "object",
                      "description": "A city. \n\nA deleted city is a city that no longer exists, possibly for a merge with other cities. Each city should have a unique ID.\n\nGiven that some big cities are associated to more zip codes, the field `zip_codes` is an array.",
                      "properties": {
                        "city_id": {
                          "type": "string",
                          "pattern": "[A-Za-z0-9-_]+",
                          "maxLength": 10,
                          "description": "The city ID. It MUST identify a city in unique way"
                        },
                        "name": {
                          "type": "string",
                          "pattern": "[A-Za-z '-]+",
                          "maxLength": 100,
                          "description": "The name reflects the value of 'lang' param"
                        },
                        "zip_codes": {
                          "type": "array",
                          "description": "Some cities spreads through different zip codes, so we treat it as a list",
                          "maxItems": 100,
                          "items": {
                            "type": "string",
                            "pattern": "[0-9]+",
                            "maxLength": 10
                          }
                        },
                        "state_code": {
                          "type": "string",
                          "maxLength": 10,
                          "pattern": "[A-Za-z0-9]+",
                          "description": "The code used by owning state to identify the city."
                        },
                        "management_code": {
                          "type": "string",
                          "description": "The code used by authorities to identify the city. In Italy could be ISTAT code (known as 'Codice catastale')",
                          "pattern": "[A-Za-z0-9]+",
                          "maxLength": 10
                        },
                        "deleted": {
                          "type": "boolean",
                          "default": false,
                          "description": "Identifies deleted cities, that means cities that are no more valid because of merging with other cities or any other reason"
                        },
                        "extension": {
                          "type": "number",
                          "minimum": 0,
                          "example": 180.07,
                          "description": "The extension of the city, in square metres"
                        },
                        "inhabitants": {
                          "type": "integer",
                          "example": 11201,
                          "exclusiveMaximum": 100000000,
                          "exclusiveMinimum": 0,
                          "format": "int32",
                          "description": "The inhabitants of the city"
                        },
                        "country_id": {
                          "type": "string",
                          "description": "ISO code of country",
                          "pattern": "[A-Za-z0-9-_]+",
                          "maxLength": 10
                        },
                        "country_name": {
                          "type": "string",
                          "pattern": "[A-Za-z0-9 -']+",
                          "maxLength": 100
                        },
                        "region_id": {
                          "type": "string",
                          "pattern": "[A-Za-z0-9-_]+",
                          "maxLength": 10,
                          "description": "The ID of the region"
                        },
                        "region_name": {
                          "type": "string",
                          "pattern": "[A-Za-z0-9 -']+",
                          "maxLength": 100
                        },
                        "province_id": {
                          "type": "string",
                          "pattern": "[A-Za-z0-9-_]+",
                          "maxLength": 10,
                          "description": "Province ID, can be null when data is not available"
                        },
                        "province_name": {
                          "type": "string",
                          "pattern": "[A-Za-z0-9 -']+",
                          "maxLength": 100
                        }
                      },
                      "required": [
                        "city_id",
                        "name"
                      ]
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+ ",
                  "maxLength": 512
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  },
                  "description": "A list of errors"
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+",
                  "maxLength": 512
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "maxLength": 512,
                  "pattern": "^[A-Za-z0-9-_]+"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "maxLength": 512,
                  "pattern": "^[A-Za-z0-9-_]+"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+",
                  "maxLength": 512
                }
              }
            }
          },
          "500": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+",
                  "maxLength": 512
                }
              }
            }
          }
        },
        "operationId": "cities-by-region-and-city-id",
        "description": "Returns a specific city of a region. The names are resolved based on requested language (default `it`)",
        "parameters": [
          {
            "name": "lang",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "it",
              "pattern": "^[a-z]{2}(-[a-z]{2})?$",
              "minLength": 2,
              "maxLength": 5
            },
            "description": "the language in which we want to receive the data, expressed in iso 639-1 format",
            "allowEmptyValue": true
          }
        ],
        "deprecated": true
      }
    },
    "/countries/{country_id}/regions/{region_id}/provinces": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "pattern": "[A-Z]{2}",
            "maxLength": 2
          },
          "name": "country_id",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string",
            "pattern": "[A-Za-z0-9]+",
            "maxLength": 10
          },
          "name": "region_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Provinces by region",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Province",
                        "x-stoplight": {
                          "id": "bwezl8ap9464m"
                        },
                        "type": "object",
                        "description": "Province, for countries we need this concept",
                        "properties": {
                          "province_id": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9-_]+",
                            "maxLength": 10,
                            "description": "The province ID. It MUST identify a province in unique way"
                          },
                          "name": {
                            "type": "string",
                            "pattern": "[A-Za-z '-]+",
                            "maxLength": 100,
                            "description": "The name reflects the value of 'lang' param"
                          },
                          "deleted": {
                            "type": "boolean",
                            "default": false,
                            "description": "Set to true is we're managing a deleted province"
                          },
                          "code": {
                            "type": "string",
                            "pattern": "[A-Za-z]+",
                            "maxLength": 5,
                            "description": "The mnemonical code of the province. For italian provine we have MI, NA, VE and so on"
                          },
                          "country_id": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9-_]+",
                            "maxLength": 10
                          },
                          "region_id": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9-_]+",
                            "maxLength": 10
                          }
                        },
                        "required": [
                          "province_id",
                          "name",
                          "code"
                        ]
                      }
                    },
                    "links": {
                      "type": "array",
                      "items": {
                        "title": "Link",
                        "x-stoplight": {
                          "id": "k4ckz809rljnf"
                        },
                        "type": "object",
                        "description": "  HATEOAS link",
                        "properties": {
                          "href": {
                            "type": "string",
                            "format": "uri",
                            "maxLength": 512
                          },
                          "rel": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ]+",
                            "maxLength": 20
                          }
                        }
                      }
                    },
                    "metadata": {
                      "title": "Metadata",
                      "x-stoplight": {
                        "id": "oib14d6qzb5yt"
                      },
                      "type": "object",
                      "description": "Associated with collection responses, but only if needed. As an example, for Province API which will return a small number of results, metadata is quite unuseful.",
                      "properties": {
                        "current_offset": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 100000,
                          "format": "int32",
                          "description": "The current offset of the results shown"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int32",
                          "minimum": 0,
                          "maximum": 10000
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+ ",
                  "maxLength": 512
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  },
                  "description": "A list of errors"
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+",
                  "maxLength": 512
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "maxLength": 512,
                  "pattern": "^[A-Za-z0-9-_]+"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "maxLength": 512,
                  "pattern": "^[A-Za-z0-9-_]+"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+",
                  "maxLength": 512
                }
              }
            }
          },
          "500": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+",
                  "maxLength": 512
                }
              }
            }
          }
        },
        "operationId": "provinces-by-region",
        "description": "Returns the provinces of a region, useful for those countries in which you want to distinguish region->province->city (like Italy). The names are resolved based on requested language (default `it`).\n\nThe `links` section includes the link to navigate the collection. It could be empty when results number is lower than `limit`.\n\nSee [HATEOAS](https://restfulapi.net/hateoas/) for further informations about `links` section.",
        "parameters": [
          {
            "name": "lang",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "it",
              "pattern": "^[a-z]{2}(-[a-z]{2})?$",
              "minLength": 2,
              "maxLength": 5
            },
            "description": "the language in which we want to receive the data, expressed in iso 639-1 format",
            "allowEmptyValue": true
          }
        ]
      }
    },
    "/countries/{country_id}/regions/{region_id}/provinces/{province_id}/cities": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "pattern": "[A-Z]{2}",
            "maxLength": 2
          },
          "name": "country_id",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string",
            "pattern": "[A-Za-z0-9]+",
            "maxLength": 10
          },
          "name": "region_id",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string",
            "pattern": "[A-Za-z0-9]+",
            "maxLength": 10
          },
          "name": "province_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Cities by region and province",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "City",
                        "x-stoplight": {
                          "id": "g1aqefhz9yjqa"
                        },
                        "type": "object",
                        "description": "A city. \n\nA deleted city is a city that no longer exists, possibly for a merge with other cities. Each city should have a unique ID.\n\nGiven that some big cities are associated to more zip codes, the field `zip_codes` is an array.",
                        "properties": {
                          "city_id": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9-_]+",
                            "maxLength": 10,
                            "description": "The city ID. It MUST identify a city in unique way"
                          },
                          "name": {
                            "type": "string",
                            "pattern": "[A-Za-z '-]+",
                            "maxLength": 100,
                            "description": "The name reflects the value of 'lang' param"
                          },
                          "zip_codes": {
                            "type": "array",
                            "description": "Some cities spreads through different zip codes, so we treat it as a list",
                            "maxItems": 100,
                            "items": {
                              "type": "string",
                              "pattern": "[0-9]+",
                              "maxLength": 10
                            }
                          },
                          "state_code": {
                            "type": "string",
                            "maxLength": 10,
                            "pattern": "[A-Za-z0-9]+",
                            "description": "The code used by owning state to identify the city."
                          },
                          "management_code": {
                            "type": "string",
                            "description": "The code used by authorities to identify the city. In Italy could be ISTAT code (known as 'Codice catastale')",
                            "pattern": "[A-Za-z0-9]+",
                            "maxLength": 10
                          },
                          "deleted": {
                            "type": "boolean",
                            "default": false,
                            "description": "Identifies deleted cities, that means cities that are no more valid because of merging with other cities or any other reason"
                          },
                          "extension": {
                            "type": "number",
                            "minimum": 0,
                            "example": 180.07,
                            "description": "The extension of the city, in square metres"
                          },
                          "inhabitants": {
                            "type": "integer",
                            "example": 11201,
                            "exclusiveMaximum": 100000000,
                            "exclusiveMinimum": 0,
                            "format": "int32",
                            "description": "The inhabitants of the city"
                          },
                          "country_id": {
                            "type": "string",
                            "description": "ISO code of country",
                            "pattern": "[A-Za-z0-9-_]+",
                            "maxLength": 10
                          },
                          "country_name": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 -']+",
                            "maxLength": 100
                          },
                          "region_id": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9-_]+",
                            "maxLength": 10,
                            "description": "The ID of the region"
                          },
                          "region_name": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 -']+",
                            "maxLength": 100
                          },
                          "province_id": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9-_]+",
                            "maxLength": 10,
                            "description": "Province ID, can be null when data is not available"
                          },
                          "province_name": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 -']+",
                            "maxLength": 100
                          }
                        },
                        "required": [
                          "city_id",
                          "name"
                        ]
                      }
                    },
                    "links": {
                      "type": "array",
                      "items": {
                        "title": "Link",
                        "x-stoplight": {
                          "id": "k4ckz809rljnf"
                        },
                        "type": "object",
                        "description": "  HATEOAS link",
                        "properties": {
                          "href": {
                            "type": "string",
                            "format": "uri",
                            "maxLength": 512
                          },
                          "rel": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ]+",
                            "maxLength": 20
                          }
                        }
                      }
                    },
                    "metadata": {
                      "title": "Metadata",
                      "x-stoplight": {
                        "id": "oib14d6qzb5yt"
                      },
                      "type": "object",
                      "description": "Associated with collection responses, but only if needed. As an example, for Province API which will return a small number of results, metadata is quite unuseful.",
                      "properties": {
                        "current_offset": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 100000,
                          "format": "int32",
                          "description": "The current offset of the results shown"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int32",
                          "minimum": 0,
                          "maximum": 10000
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+ ",
                  "maxLength": 512
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  },
                  "description": "A list of errors"
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+",
                  "maxLength": 512
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "maxLength": 512,
                  "pattern": "^[A-Za-z0-9-_]+"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "maxLength": 512,
                  "pattern": "^[A-Za-z0-9-_]+"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+",
                  "maxLength": 512
                }
              }
            }
          },
          "500": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+",
                  "maxLength": 512
                }
              }
            }
          }
        },
        "operationId": "get-api-geo-countries-country_code-regions-region_code-provinces-province_code-cities",
        "description": "Retrieves the cities of a province. Useful for countries, like Italy, which distinguishes region and province. The names are resolved based on requested language (default `it`).\n\nThe `links` section includes the link to navigate the collection.\n\nSee [HATEOAS](https://restfulapi.net/hateoas/) for further informations about `links` section.",
        "parameters": [
          {
            "name": "lang",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "it",
              "pattern": "^[a-z]{2}(-[a-z]{2})?$",
              "minLength": 2,
              "maxLength": 5
            },
            "description": "the language in which we want to receive the data, expressed in iso 639-1 format",
            "allowEmptyValue": true
          }
        ]
      }
    },
    "/countries/{country_id}/regions/{region_id}/provinces/{province_id}/cities/{city_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "pattern": "[A-Z]{2}",
            "maxLength": 2
          },
          "name": "country_id",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string",
            "pattern": "[A-Za-z0-9]+",
            "maxLength": 10
          },
          "name": "region_id",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string",
            "pattern": "[A-Za-z0-9]+",
            "maxLength": 10
          },
          "name": "province_id",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string",
            "pattern": "[A-Za-z0-9]+",
            "maxLength": 10
          },
          "name": "city_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "City detail by city ID, region and province",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "City",
                      "x-stoplight": {
                        "id": "g1aqefhz9yjqa"
                      },
                      "type": "object",
                      "description": "A city. \n\nA deleted city is a city that no longer exists, possibly for a merge with other cities. Each city should have a unique ID.\n\nGiven that some big cities are associated to more zip codes, the field `zip_codes` is an array.",
                      "properties": {
                        "city_id": {
                          "type": "string",
                          "pattern": "[A-Za-z0-9-_]+",
                          "maxLength": 10,
                          "description": "The city ID. It MUST identify a city in unique way"
                        },
                        "name": {
                          "type": "string",
                          "pattern": "[A-Za-z '-]+",
                          "maxLength": 100,
                          "description": "The name reflects the value of 'lang' param"
                        },
                        "zip_codes": {
                          "type": "array",
                          "description": "Some cities spreads through different zip codes, so we treat it as a list",
                          "maxItems": 100,
                          "items": {
                            "type": "string",
                            "pattern": "[0-9]+",
                            "maxLength": 10
                          }
                        },
                        "state_code": {
                          "type": "string",
                          "maxLength": 10,
                          "pattern": "[A-Za-z0-9]+",
                          "description": "The code used by owning state to identify the city."
                        },
                        "management_code": {
                          "type": "string",
                          "description": "The code used by authorities to identify the city. In Italy could be ISTAT code (known as 'Codice catastale')",
                          "pattern": "[A-Za-z0-9]+",
                          "maxLength": 10
                        },
                        "deleted": {
                          "type": "boolean",
                          "default": false,
                          "description": "Identifies deleted cities, that means cities that are no more valid because of merging with other cities or any other reason"
                        },
                        "extension": {
                          "type": "number",
                          "minimum": 0,
                          "example": 180.07,
                          "description": "The extension of the city, in square metres"
                        },
                        "inhabitants": {
                          "type": "integer",
                          "example": 11201,
                          "exclusiveMaximum": 100000000,
                          "exclusiveMinimum": 0,
                          "format": "int32",
                          "description": "The inhabitants of the city"
                        },
                        "country_id": {
                          "type": "string",
                          "description": "ISO code of country",
                          "pattern": "[A-Za-z0-9-_]+",
                          "maxLength": 10
                        },
                        "country_name": {
                          "type": "string",
                          "pattern": "[A-Za-z0-9 -']+",
                          "maxLength": 100
                        },
                        "region_id": {
                          "type": "string",
                          "pattern": "[A-Za-z0-9-_]+",
                          "maxLength": 10,
                          "description": "The ID of the region"
                        },
                        "region_name": {
                          "type": "string",
                          "pattern": "[A-Za-z0-9 -']+",
                          "maxLength": 100
                        },
                        "province_id": {
                          "type": "string",
                          "pattern": "[A-Za-z0-9-_]+",
                          "maxLength": 10,
                          "description": "Province ID, can be null when data is not available"
                        },
                        "province_name": {
                          "type": "string",
                          "pattern": "[A-Za-z0-9 -']+",
                          "maxLength": 100
                        }
                      },
                      "required": [
                        "city_id",
                        "name"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+ ",
                  "maxLength": 512
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  },
                  "description": "A list of errors"
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+",
                  "maxLength": 512
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "maxLength": 512,
                  "pattern": "^[A-Za-z0-9-_]+"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "maxLength": 512,
                  "pattern": "^[A-Za-z0-9-_]+"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+",
                  "maxLength": 512
                }
              }
            }
          },
          "500": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+",
                  "maxLength": 512
                }
              }
            }
          }
        },
        "operationId": "city-by-city-id-and-province",
        "description": "Retrieves the cities of a province. Useful for countries, like Italy, which distinguishes region and province. The names are resolved based on requested language (default `it`)",
        "parameters": [
          {
            "name": "lang",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "it",
              "pattern": "^[a-z]{2}(-[a-z]{2})?$",
              "minLength": 2,
              "maxLength": 5
            },
            "description": "the language in which we want to receive the data, expressed in iso 639-1 format",
            "allowEmptyValue": true
          }
        ],
        "deprecated": true
      }
    },
    "/cities/{city_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "pattern": "[A-Za-z0-9-_]+",
            "maxLength": 10
          },
          "name": "city_id",
          "in": "path",
          "required": true,
          "description": "city_id"
        }
      ],
      "get": {
        "summary": "City by ID",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "City",
                      "x-stoplight": {
                        "id": "g1aqefhz9yjqa"
                      },
                      "type": "object",
                      "description": "A city. \n\nA deleted city is a city that no longer exists, possibly for a merge with other cities. Each city should have a unique ID.\n\nGiven that some big cities are associated to more zip codes, the field `zip_codes` is an array.",
                      "properties": {
                        "city_id": {
                          "type": "string",
                          "pattern": "[A-Za-z0-9-_]+",
                          "maxLength": 10,
                          "description": "The city ID. It MUST identify a city in unique way"
                        },
                        "name": {
                          "type": "string",
                          "pattern": "[A-Za-z '-]+",
                          "maxLength": 100,
                          "description": "The name reflects the value of 'lang' param"
                        },
                        "zip_codes": {
                          "type": "array",
                          "description": "Some cities spreads through different zip codes, so we treat it as a list",
                          "maxItems": 100,
                          "items": {
                            "type": "string",
                            "pattern": "[0-9]+",
                            "maxLength": 10
                          }
                        },
                        "state_code": {
                          "type": "string",
                          "maxLength": 10,
                          "pattern": "[A-Za-z0-9]+",
                          "description": "The code used by owning state to identify the city."
                        },
                        "management_code": {
                          "type": "string",
                          "description": "The code used by authorities to identify the city. In Italy could be ISTAT code (known as 'Codice catastale')",
                          "pattern": "[A-Za-z0-9]+",
                          "maxLength": 10
                        },
                        "deleted": {
                          "type": "boolean",
                          "default": false,
                          "description": "Identifies deleted cities, that means cities that are no more valid because of merging with other cities or any other reason"
                        },
                        "extension": {
                          "type": "number",
                          "minimum": 0,
                          "example": 180.07,
                          "description": "The extension of the city, in square metres"
                        },
                        "inhabitants": {
                          "type": "integer",
                          "example": 11201,
                          "exclusiveMaximum": 100000000,
                          "exclusiveMinimum": 0,
                          "format": "int32",
                          "description": "The inhabitants of the city"
                        },
                        "country_id": {
                          "type": "string",
                          "description": "ISO code of country",
                          "pattern": "[A-Za-z0-9-_]+",
                          "maxLength": 10
                        },
                        "country_name": {
                          "type": "string",
                          "pattern": "[A-Za-z0-9 -']+",
                          "maxLength": 100
                        },
                        "region_id": {
                          "type": "string",
                          "pattern": "[A-Za-z0-9-_]+",
                          "maxLength": 10,
                          "description": "The ID of the region"
                        },
                        "region_name": {
                          "type": "string",
                          "pattern": "[A-Za-z0-9 -']+",
                          "maxLength": 100
                        },
                        "province_id": {
                          "type": "string",
                          "pattern": "[A-Za-z0-9-_]+",
                          "maxLength": 10,
                          "description": "Province ID, can be null when data is not available"
                        },
                        "province_name": {
                          "type": "string",
                          "pattern": "[A-Za-z0-9 -']+",
                          "maxLength": 100
                        }
                      },
                      "required": [
                        "city_id",
                        "name"
                      ]
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+",
                  "maxLength": 512
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "maxLength": 512,
                  "pattern": "^[A-Za-z0-9-_]+"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "maxLength": 512,
                  "pattern": "^[A-Za-z0-9-_]+"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+",
                  "maxLength": 512
                }
              }
            }
          },
          "500": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+",
                  "maxLength": 512
                }
              }
            }
          }
        },
        "operationId": "get-geo-cities-city_id",
        "description": "City detail, reached directly with `city_id` (which should be unique).\n\nThis API provides references to country/region/province already resolved, in the right language according to `lang` param.\n\n**TODO** understand if this API is really needed, maybe not!",
        "parameters": [
          {
            "name": "lang",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "it",
              "pattern": "^[a-z]{2}(-[a-z]{2})?$",
              "minLength": 2,
              "maxLength": 5
            },
            "description": "the language in which we want to receive the data, expressed in iso 639-1 format",
            "allowEmptyValue": true
          }
        ]
      }
    },
    "/tax-code-validation": {
      "parameters": [],
      "put": {
        "summary": "Validate tax code",
        "operationId": "validate-tax-code",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "TaxCodeOwner",
                      "x-stoplight": {
                        "id": "1t9kjpf0tvxrn"
                      },
                      "type": "object",
                      "description": "The owner of tax code",
                      "properties": {
                        "tax_code": {
                          "type": "string",
                          "maxLength": 20,
                          "pattern": "[A-Za-z0-9]+"
                        },
                        "last_name": {
                          "type": "string",
                          "pattern": "[A-Za-z ]+",
                          "maxLength": 100,
                          "description": "The last name of the owner of tax code, if available"
                        },
                        "first_name": {
                          "type": "string",
                          "pattern": "[A-Za-z ]+",
                          "maxLength": 100,
                          "description": "The first name of the owner of tax code, if available"
                        },
                        "sex": {
                          "type": "string",
                          "maxLength": 2,
                          "pattern": "[A-Z]+",
                          "example": "M",
                          "description": "The sex of the owner of tax code, if available"
                        },
                        "birth_date": {
                          "type": "string",
                          "format": "date",
                          "maxLength": 10,
                          "description": "The birth date, in YYYY-mm-dd format"
                        },
                        "birth_region": {
                          "type": "string",
                          "pattern": "[A-Za-z ']+",
                          "maxLength": 100,
                          "description": "The name reflects the value of 'lang' param"
                        },
                        "birth_province": {
                          "type": "string",
                          "pattern": "[A-Za-z ']+",
                          "maxLength": 100,
                          "description": "The name reflects the value of 'lang' param"
                        },
                        "birth_city": {
                          "type": "string",
                          "pattern": "[A-Za-z ']+",
                          "maxLength": 100,
                          "description": "The name reflects the value of 'lang' param"
                        },
                        "birth_city_management_code": {
                          "type": "string",
                          "pattern": "[A-Za-z0-9]+",
                          "maxLength": 10,
                          "description": "if available"
                        },
                        "birth_city_state_code": {
                          "type": "string",
                          "pattern": "[A-Za-z0-9]+",
                          "maxLength": 10,
                          "description": "if available"
                        },
                        "control_chars": {
                          "type": "string",
                          "pattern": "[A-Za-z0-9]+",
                          "maxLength": 10,
                          "description": "Additional chars of the tax code, if present"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  },
                  "description": "A list of errors"
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+",
                  "maxLength": 512
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "maxLength": 512,
                  "pattern": "^[A-Za-z0-9-_]+"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "maxLength": 512,
                  "pattern": "^[A-Za-z0-9-_]+"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+",
                  "maxLength": 512
                }
              }
            }
          },
          "500": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+",
                  "maxLength": 512
                }
              }
            }
          },
          "501": {
            "description": "Not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+",
                  "maxLength": 512
                }
              }
            }
          }
        },
        "description": "Validate a tax code. This feature can be supported only for some countries, not for all. If not supported API returns `HTTP 501 - Not implemented`. \n\nIt returns the decoded city and region names in the requested language, according to the see `lang` query param.",
        "parameters": [
          {
            "name": "lang",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "it",
              "pattern": "^[a-z]{2}(-[a-z]{2})?$",
              "minLength": 2,
              "maxLength": 5
            },
            "description": "the language in which we want to receive the data, expressed in iso 639-1 format",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "country_id": {
                    "type": "string",
                    "pattern": "[A-Za-z]{2}",
                    "maxLength": 2
                  },
                  "tax_code": {
                    "type": "string",
                    "pattern": "[A-Za-z0-9]+",
                    "maxLength": 20
                  }
                }
              }
            }
          },
          "description": "Body of tax code validation PUT endpoint"
        }
      }
    },
    "/cities/search": {
      "parameters": [],
      "post": {
        "summary": "Search and validate cities",
        "operationId": "post-cities-search",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "maxItems": 200,
                      "items": {
                        "title": "City",
                        "x-stoplight": {
                          "id": "g1aqefhz9yjqa"
                        },
                        "type": "object",
                        "description": "A city. \n\nA deleted city is a city that no longer exists, possibly for a merge with other cities. Each city should have a unique ID.\n\nGiven that some big cities are associated to more zip codes, the field `zip_codes` is an array.",
                        "properties": {
                          "city_id": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9-_]+",
                            "maxLength": 10,
                            "description": "The city ID. It MUST identify a city in unique way"
                          },
                          "name": {
                            "type": "string",
                            "pattern": "[A-Za-z '-]+",
                            "maxLength": 100,
                            "description": "The name reflects the value of 'lang' param"
                          },
                          "zip_codes": {
                            "type": "array",
                            "description": "Some cities spreads through different zip codes, so we treat it as a list",
                            "maxItems": 100,
                            "items": {
                              "type": "string",
                              "pattern": "[0-9]+",
                              "maxLength": 10
                            }
                          },
                          "state_code": {
                            "type": "string",
                            "maxLength": 10,
                            "pattern": "[A-Za-z0-9]+",
                            "description": "The code used by owning state to identify the city."
                          },
                          "management_code": {
                            "type": "string",
                            "description": "The code used by authorities to identify the city. In Italy could be ISTAT code (known as 'Codice catastale')",
                            "pattern": "[A-Za-z0-9]+",
                            "maxLength": 10
                          },
                          "deleted": {
                            "type": "boolean",
                            "default": false,
                            "description": "Identifies deleted cities, that means cities that are no more valid because of merging with other cities or any other reason"
                          },
                          "extension": {
                            "type": "number",
                            "minimum": 0,
                            "example": 180.07,
                            "description": "The extension of the city, in square metres"
                          },
                          "inhabitants": {
                            "type": "integer",
                            "example": 11201,
                            "exclusiveMaximum": 100000000,
                            "exclusiveMinimum": 0,
                            "format": "int32",
                            "description": "The inhabitants of the city"
                          },
                          "country_id": {
                            "type": "string",
                            "description": "ISO code of country",
                            "pattern": "[A-Za-z0-9-_]+",
                            "maxLength": 10
                          },
                          "country_name": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 -']+",
                            "maxLength": 100
                          },
                          "region_id": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9-_]+",
                            "maxLength": 10,
                            "description": "The ID of the region"
                          },
                          "region_name": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 -']+",
                            "maxLength": 100
                          },
                          "province_id": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9-_]+",
                            "maxLength": 10,
                            "description": "Province ID, can be null when data is not available"
                          },
                          "province_name": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 -']+",
                            "maxLength": 100
                          }
                        },
                        "required": [
                          "city_id",
                          "name"
                        ]
                      }
                    },
                    "links": {
                      "type": "array",
                      "maxItems": 200,
                      "items": {
                        "title": "Link",
                        "x-stoplight": {
                          "id": "k4ckz809rljnf"
                        },
                        "type": "object",
                        "description": "  HATEOAS link",
                        "properties": {
                          "href": {
                            "type": "string",
                            "format": "uri",
                            "maxLength": 512
                          },
                          "rel": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ]+",
                            "maxLength": 20
                          }
                        }
                      }
                    },
                    "metadata": {
                      "title": "Metadata",
                      "x-stoplight": {
                        "id": "oib14d6qzb5yt"
                      },
                      "type": "object",
                      "description": "Associated with collection responses, but only if needed. As an example, for Province API which will return a small number of results, metadata is quite unuseful.",
                      "properties": {
                        "current_offset": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 100000,
                          "format": "int32",
                          "description": "The current offset of the results shown"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int32",
                          "minimum": 0,
                          "maximum": 10000
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  },
                  "description": "A list of errors"
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+",
                  "maxLength": 512
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "maxLength": 512,
                  "pattern": "^[A-Za-z0-9-_]+"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "maxLength": 512,
                  "pattern": "^[A-Za-z0-9-_]+"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detected errors",
                  "title": "Errors",
                  "x-stoplight": {
                    "id": "42dh0daenq6h2"
                  },
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "maxItems": 20,
                      "items": {
                        "title": "Error",
                        "x-stoplight": {
                          "id": "t9idoy80cfd30"
                        },
                        "type": "object",
                        "description": "Represents an error",
                        "properties": {
                          "code": {
                            "type": "string",
                            "pattern": "[A-Z0-9]+",
                            "maxLength": 6,
                            "description": "The error code. Can be used to localize the error, if shown to clients"
                          },
                          "message": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9 ,]+",
                            "maxLength": 100,
                            "description": "The error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+",
                  "maxLength": 512
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "lang",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "it",
              "pattern": "^[a-z]{2}(-[a-z]{2})?$",
              "minLength": 2,
              "maxLength": 5
            },
            "description": "the language in which we want to receive the data, expressed in iso 639-1 format",
            "allowEmptyValue": true
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 0,
              "maximum": 50,
              "default": 20
            },
            "description": "the page size, for collection APIs",
            "allowEmptyValue": true
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 100000,
              "default": 0
            },
            "description": "the offset to start",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "city_name": {
                    "type": "string",
                    "pattern": "[A-Za-z0-9 ,']+",
                    "maxLength": 100
                  },
                  "province_name": {
                    "type": "string",
                    "pattern": "[A-Za-z0-9 ,']+",
                    "maxLength": 100
                  },
                  "region_name": {
                    "type": "string",
                    "pattern": "[A-Za-z0-9 ,']+",
                    "maxLength": 100
                  },
                  "country_id": {
                    "type": "string",
                    "pattern": "[a-z]{2}",
                    "maxLength": 2,
                    "description": "ISO ID of the target country"
                  }
                },
                "required": [
                  "country_id"
                ]
              }
            }
          },
          "description": "The body of the endpoint that allows to query the database city by name.\nNone of the properties, except for `country_id`, is mandatory, but at least one should be populated, in order to avoid to retrieve all cities of a country."
        },
        "description": "Search for cities, given\n\n- `region name`\n- `province name`\n- `city name`\n\nand `country_id` which is mandatory in order to restrict always the search to a country and not to the whole world. None of the other properties is mandatory but at least 1 of `region_name`, `province_name` or `city_name` should be populated to avoid a `HTTP 400`.\n\n**It's main use is to validate data of excel spreadsheet, in which the name of regions, provinces and cities are written \"as is\", without use of ID. This API is deprecated, because it supports a validation feature that will be removed in next releases.**\n\nAs you may guess from the name of the criterias, this API works 'by name' not 'by id' so, when you want to perform a request like the following, names that should be passed according to `lang` param. Put it shortly, if you pass `lang=it` you should pass the names in italian language.\n\n```bash\ncurl -X POST \"http://host:port/geo/cities/search?lang=it&offset=0&limit=20\" -H 'auth_header' \\\n-d '{\n  \"country_id\":\"it\",\n  \"region_name\":\"lombardia\",\n  \"province_name\":\"milano\"\n}'\n```\n\nNotiche that the `lang` parameter os not tied to `country_id`. You can perform a request like the following to obtain, with names translated in italian language, the names of all the cities of German region called (in italian) *Baviera*.\n\n```bash\ncurl -X POST \"http://host:port/geo/cities/search?lang=it&offset=0&limit=20\" -H 'auth_header' \\\n-d '{\n  \"country_id\":\"de\",\n  \"region_name\":\"baviera\"\n}'\n```\n\nSee [HATEOAS](https://restfulapi.net/hateoas/) for further informations about `links` section.",
        "deprecated": true
      }
    },
    "/attempt/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 1000
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "To Be Deleted",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-attempt-id"
      }
    }
  },
  "components": {
    "schemas": {
      "Country": {
        "title": "Country",
        "x-stoplight": {
          "id": "vpkrf5u530zds"
        },
        "type": "object",
        "description": "Represents a country",
        "properties": {
          "country_id": {
            "type": "string",
            "pattern": "[A-Za-z0-9-_]+",
            "maxLength": 10,
            "description": "ISO code of the country (it, en, de etc.)"
          },
          "name": {
            "type": "string",
            "pattern": "[A-Za-z '-]+",
            "maxLength": 100,
            "description": "The name reflects the value of 'lang' param"
          },
          "phone_code": {
            "type": "string",
            "pattern": "[0-9]*",
            "maxLength": 3,
            "description": "The phone code of the country (link 39 for Italy)"
          },
          "deleted": {
            "type": "boolean",
            "default": false,
            "description": "Set to true is we're managing a deleted country like Yugoslavia"
          }
        },
        "required": [
          "country_id",
          "name"
        ]
      },
      "Region": {
        "title": "Region",
        "x-stoplight": {
          "id": "ik33rb3jg6t03"
        },
        "type": "object",
        "description": "Region / State (for US or other federated countries).\n\nThis API does not force region_id to have a particular format, but implementors have to make sure it will be unique for that region state. It could be a random alphanumeric code ('abc012') or could be something that recalls countries (es 'us-ak' for Alaska, 'it-lo' for Lombardy etc). It is purely an implementor's choice, the important is that the code is unique.",
        "properties": {
          "region_id": {
            "type": "string",
            "pattern": "[A-Za-z0-9-_]+",
            "maxLength": 10,
            "description": "The region ID. It MUST identify a region/state in unique way."
          },
          "name": {
            "type": "string",
            "pattern": "[A-Za-z '-]+",
            "maxLength": 100,
            "description": "The name reflects the value of 'lang' param"
          },
          "deleted": {
            "type": "boolean",
            "default": false,
            "description": "Set to true is we're managing a deleted region"
          },
          "country_id": {
            "type": "string",
            "pattern": "[A-Za-z0-9-_]+",
            "maxLength": 10,
            "description": "The country ID (ISO)"
          }
        },
        "required": [
          "region_id",
          "name"
        ]
      },
      "Province": {
        "title": "Province",
        "x-stoplight": {
          "id": "bwezl8ap9464m"
        },
        "type": "object",
        "description": "Province, for countries we need this concept",
        "properties": {
          "province_id": {
            "type": "string",
            "pattern": "[A-Za-z0-9-_]+",
            "maxLength": 10,
            "description": "The province ID. It MUST identify a province in unique way"
          },
          "name": {
            "type": "string",
            "pattern": "[A-Za-z '-]+",
            "maxLength": 100,
            "description": "The name reflects the value of 'lang' param"
          },
          "deleted": {
            "type": "boolean",
            "default": false,
            "description": "Set to true is we're managing a deleted province"
          },
          "code": {
            "type": "string",
            "pattern": "[A-Za-z]+",
            "maxLength": 5,
            "description": "The mnemonical code of the province. For italian provine we have MI, NA, VE and so on"
          },
          "country_id": {
            "type": "string",
            "pattern": "[A-Za-z0-9-_]+",
            "maxLength": 10
          },
          "region_id": {
            "type": "string",
            "pattern": "[A-Za-z0-9-_]+",
            "maxLength": 10
          }
        },
        "required": [
          "province_id",
          "name",
          "code"
        ]
      },
      "City": {
        "title": "City",
        "x-stoplight": {
          "id": "g1aqefhz9yjqa"
        },
        "type": "object",
        "description": "A city. \n\nA deleted city is a city that no longer exists, possibly for a merge with other cities. Each city should have a unique ID.\n\nGiven that some big cities are associated to more zip codes, the field `zip_codes` is an array.",
        "properties": {
          "city_id": {
            "type": "string",
            "pattern": "[A-Za-z0-9-_]+",
            "maxLength": 10,
            "description": "The city ID. It MUST identify a city in unique way"
          },
          "name": {
            "type": "string",
            "pattern": "[A-Za-z '-]+",
            "maxLength": 100,
            "description": "The name reflects the value of 'lang' param"
          },
          "zip_codes": {
            "type": "array",
            "description": "Some cities spreads through different zip codes, so we treat it as a list",
            "maxItems": 100,
            "items": {
              "type": "string",
              "pattern": "[0-9]+",
              "maxLength": 10
            }
          },
          "state_code": {
            "type": "string",
            "maxLength": 10,
            "pattern": "[A-Za-z0-9]+",
            "description": "The code used by owning state to identify the city."
          },
          "management_code": {
            "type": "string",
            "description": "The code used by authorities to identify the city. In Italy could be ISTAT code (known as 'Codice catastale')",
            "pattern": "[A-Za-z0-9]+",
            "maxLength": 10
          },
          "deleted": {
            "type": "boolean",
            "default": false,
            "description": "Identifies deleted cities, that means cities that are no more valid because of merging with other cities or any other reason"
          },
          "extension": {
            "type": "number",
            "minimum": 0,
            "example": 180.07,
            "description": "The extension of the city, in square metres"
          },
          "inhabitants": {
            "type": "integer",
            "example": 11201,
            "exclusiveMaximum": 100000000,
            "exclusiveMinimum": 0,
            "format": "int32",
            "description": "The inhabitants of the city"
          },
          "country_id": {
            "type": "string",
            "description": "ISO code of country",
            "pattern": "[A-Za-z0-9-_]+",
            "maxLength": 10
          },
          "country_name": {
            "type": "string",
            "pattern": "[A-Za-z0-9 -']+",
            "maxLength": 100
          },
          "region_id": {
            "type": "string",
            "pattern": "[A-Za-z0-9-_]+",
            "maxLength": 10,
            "description": "The ID of the region"
          },
          "region_name": {
            "type": "string",
            "pattern": "[A-Za-z0-9 -']+",
            "maxLength": 100
          },
          "province_id": {
            "type": "string",
            "pattern": "[A-Za-z0-9-_]+",
            "maxLength": 10,
            "description": "Province ID, can be null when data is not available"
          },
          "province_name": {
            "type": "string",
            "pattern": "[A-Za-z0-9 -']+",
            "maxLength": 100
          }
        },
        "required": [
          "city_id",
          "name"
        ]
      },
      "TaxCodeOwner": {
        "title": "TaxCodeOwner",
        "x-stoplight": {
          "id": "1t9kjpf0tvxrn"
        },
        "type": "object",
        "description": "The owner of tax code",
        "properties": {
          "tax_code": {
            "type": "string",
            "maxLength": 20,
            "pattern": "[A-Za-z0-9]+"
          },
          "last_name": {
            "type": "string",
            "pattern": "[A-Za-z ]+",
            "maxLength": 100,
            "description": "The last name of the owner of tax code, if available"
          },
          "first_name": {
            "type": "string",
            "pattern": "[A-Za-z ]+",
            "maxLength": 100,
            "description": "The first name of the owner of tax code, if available"
          },
          "sex": {
            "type": "string",
            "maxLength": 2,
            "pattern": "[A-Z]+",
            "example": "M",
            "description": "The sex of the owner of tax code, if available"
          },
          "birth_date": {
            "type": "string",
            "format": "date",
            "maxLength": 10,
            "description": "The birth date, in YYYY-mm-dd format"
          },
          "birth_region": {
            "type": "string",
            "pattern": "[A-Za-z ']+",
            "maxLength": 100,
            "description": "The name reflects the value of 'lang' param"
          },
          "birth_province": {
            "type": "string",
            "pattern": "[A-Za-z ']+",
            "maxLength": 100,
            "description": "The name reflects the value of 'lang' param"
          },
          "birth_city": {
            "type": "string",
            "pattern": "[A-Za-z ']+",
            "maxLength": 100,
            "description": "The name reflects the value of 'lang' param"
          },
          "birth_city_management_code": {
            "type": "string",
            "pattern": "[A-Za-z0-9]+",
            "maxLength": 10,
            "description": "if available"
          },
          "birth_city_state_code": {
            "type": "string",
            "pattern": "[A-Za-z0-9]+",
            "maxLength": 10,
            "description": "if available"
          },
          "control_chars": {
            "type": "string",
            "pattern": "[A-Za-z0-9]+",
            "maxLength": 10,
            "description": "Additional chars of the tax code, if present"
          }
        }
      },
      "Error": {
        "title": "Error",
        "x-stoplight": {
          "id": "t9idoy80cfd30"
        },
        "type": "object",
        "description": "Represents an error",
        "properties": {
          "code": {
            "type": "string",
            "pattern": "[A-Z0-9]+",
            "maxLength": 6,
            "description": "The error code. Can be used to localize the error, if shown to clients"
          },
          "message": {
            "type": "string",
            "pattern": "[A-Za-z0-9 ,]+",
            "maxLength": 100,
            "description": "The error message"
          }
        }
      },
      "Link": {
        "title": "Link",
        "x-stoplight": {
          "id": "k4ckz809rljnf"
        },
        "type": "object",
        "description": "  HATEOAS link",
        "properties": {
          "href": {
            "type": "string",
            "format": "uri",
            "maxLength": 512
          },
          "rel": {
            "type": "string",
            "pattern": "[A-Za-z0-9 ]+",
            "maxLength": 20
          }
        }
      },
      "Metadata": {
        "title": "Metadata",
        "x-stoplight": {
          "id": "oib14d6qzb5yt"
        },
        "type": "object",
        "description": "Associated with collection responses, but only if needed. As an example, for Province API which will return a small number of results, metadata is quite unuseful.",
        "properties": {
          "current_offset": {
            "type": "integer",
            "minimum": 0,
            "maximum": 100000,
            "format": "int32",
            "description": "The current offset of the results shown"
          },
          "total_count": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 10000
          }
        }
      },
      "Errors": {
        "title": "Errors",
        "x-stoplight": {
          "id": "42dh0daenq6h2"
        },
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "maxItems": 20,
            "items": {
              "title": "Error",
              "x-stoplight": {
                "id": "t9idoy80cfd30"
              },
              "type": "object",
              "description": "Represents an error",
              "properties": {
                "code": {
                  "type": "string",
                  "pattern": "[A-Z0-9]+",
                  "maxLength": 6,
                  "description": "The error code. Can be used to localize the error, if shown to clients"
                },
                "message": {
                  "type": "string",
                  "pattern": "[A-Za-z0-9 ,]+",
                  "maxLength": 100,
                  "description": "The error message"
                }
              }
            }
          }
        },
        "description": "A list of errors"
      }
    },
    "responses": {
      "400": {
        "description": "Invalid request",
        "content": {
          "application/json": {
            "schema": {
              "description": "Detected errors",
              "title": "Errors",
              "x-stoplight": {
                "id": "42dh0daenq6h2"
              },
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "maxItems": 20,
                  "items": {
                    "title": "Error",
                    "x-stoplight": {
                      "id": "t9idoy80cfd30"
                    },
                    "type": "object",
                    "description": "Represents an error",
                    "properties": {
                      "code": {
                        "type": "string",
                        "pattern": "[A-Z0-9]+",
                        "maxLength": 6,
                        "description": "The error code. Can be used to localize the error, if shown to clients"
                      },
                      "message": {
                        "type": "string",
                        "pattern": "[A-Za-z0-9 ,]+",
                        "maxLength": 100,
                        "description": "The error message"
                      }
                    }
                  }
                }
              }
            }
          },
          "application/xml": {
            "schema": {
              "title": "Errors",
              "x-stoplight": {
                "id": "42dh0daenq6h2"
              },
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "maxItems": 20,
                  "items": {
                    "title": "Error",
                    "x-stoplight": {
                      "id": "t9idoy80cfd30"
                    },
                    "type": "object",
                    "description": "Represents an error",
                    "properties": {
                      "code": {
                        "type": "string",
                        "pattern": "[A-Z0-9]+",
                        "maxLength": 6,
                        "description": "The error code. Can be used to localize the error, if shown to clients"
                      },
                      "message": {
                        "type": "string",
                        "pattern": "[A-Za-z0-9 ,]+",
                        "maxLength": 100,
                        "description": "The error message"
                      }
                    }
                  }
                }
              },
              "description": "A list of errors"
            }
          }
        },
        "headers": {
          "X-RateLimit-Limit": {
            "schema": {
              "type": "string",
              "pattern": "^[A-Za-z0-9-_]+",
              "maxLength": 512
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "description": "Detected errors",
              "title": "Errors",
              "x-stoplight": {
                "id": "42dh0daenq6h2"
              },
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "maxItems": 20,
                  "items": {
                    "title": "Error",
                    "x-stoplight": {
                      "id": "t9idoy80cfd30"
                    },
                    "type": "object",
                    "description": "Represents an error",
                    "properties": {
                      "code": {
                        "type": "string",
                        "pattern": "[A-Z0-9]+",
                        "maxLength": 6,
                        "description": "The error code. Can be used to localize the error, if shown to clients"
                      },
                      "message": {
                        "type": "string",
                        "pattern": "[A-Za-z0-9 ,]+",
                        "maxLength": 100,
                        "description": "The error message"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "headers": {
          "X-RateLimit-Limit": {
            "schema": {
              "type": "string",
              "maxLength": 512,
              "pattern": "^[A-Za-z0-9-_]+"
            }
          }
        }
      },
      "403": {
        "description": "Forbidden access",
        "content": {
          "application/json": {
            "schema": {
              "description": "Detected errors",
              "title": "Errors",
              "x-stoplight": {
                "id": "42dh0daenq6h2"
              },
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "maxItems": 20,
                  "items": {
                    "title": "Error",
                    "x-stoplight": {
                      "id": "t9idoy80cfd30"
                    },
                    "type": "object",
                    "description": "Represents an error",
                    "properties": {
                      "code": {
                        "type": "string",
                        "pattern": "[A-Z0-9]+",
                        "maxLength": 6,
                        "description": "The error code. Can be used to localize the error, if shown to clients"
                      },
                      "message": {
                        "type": "string",
                        "pattern": "[A-Za-z0-9 ,]+",
                        "maxLength": 100,
                        "description": "The error message"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "headers": {
          "X-RateLimit-Limit": {
            "schema": {
              "type": "string",
              "maxLength": 512,
              "pattern": "^[A-Za-z0-9-_]+"
            }
          }
        }
      },
      "404": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "description": "Detected errors",
              "title": "Errors",
              "x-stoplight": {
                "id": "42dh0daenq6h2"
              },
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "maxItems": 20,
                  "items": {
                    "title": "Error",
                    "x-stoplight": {
                      "id": "t9idoy80cfd30"
                    },
                    "type": "object",
                    "description": "Represents an error",
                    "properties": {
                      "code": {
                        "type": "string",
                        "pattern": "[A-Z0-9]+",
                        "maxLength": 6,
                        "description": "The error code. Can be used to localize the error, if shown to clients"
                      },
                      "message": {
                        "type": "string",
                        "pattern": "[A-Za-z0-9 ,]+",
                        "maxLength": 100,
                        "description": "The error message"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "headers": {
          "X-RateLimit-Limit": {
            "schema": {
              "type": "string",
              "pattern": "^[A-Za-z0-9-_]+",
              "maxLength": 512
            }
          }
        }
      },
      "500": {
        "description": "Error response",
        "content": {
          "application/json": {
            "schema": {
              "description": "Detected errors",
              "title": "Errors",
              "x-stoplight": {
                "id": "42dh0daenq6h2"
              },
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "maxItems": 20,
                  "items": {
                    "title": "Error",
                    "x-stoplight": {
                      "id": "t9idoy80cfd30"
                    },
                    "type": "object",
                    "description": "Represents an error",
                    "properties": {
                      "code": {
                        "type": "string",
                        "pattern": "[A-Z0-9]+",
                        "maxLength": 6,
                        "description": "The error code. Can be used to localize the error, if shown to clients"
                      },
                      "message": {
                        "type": "string",
                        "pattern": "[A-Za-z0-9 ,]+",
                        "maxLength": 100,
                        "description": "The error message"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "headers": {
          "X-RateLimit-Limit": {
            "schema": {
              "type": "string",
              "pattern": "^[A-Za-z0-9-_]+",
              "maxLength": 512
            }
          }
        }
      },
      "501": {
        "description": "Not implemented",
        "content": {
          "application/json": {
            "schema": {
              "description": "Detected errors",
              "title": "Errors",
              "x-stoplight": {
                "id": "42dh0daenq6h2"
              },
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "maxItems": 20,
                  "items": {
                    "title": "Error",
                    "x-stoplight": {
                      "id": "t9idoy80cfd30"
                    },
                    "type": "object",
                    "description": "Represents an error",
                    "properties": {
                      "code": {
                        "type": "string",
                        "pattern": "[A-Z0-9]+",
                        "maxLength": 6,
                        "description": "The error code. Can be used to localize the error, if shown to clients"
                      },
                      "message": {
                        "type": "string",
                        "pattern": "[A-Za-z0-9 ,]+",
                        "maxLength": 100,
                        "description": "The error message"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "headers": {
          "X-RateLimit-Limit": {
            "schema": {
              "type": "string",
              "pattern": "^[A-Za-z0-9-_]+",
              "maxLength": 512
            }
          }
        }
      },
      "Countries": {
        "description": "List of countries, ordered by name. The examples shows a minimal subste of the countries just to give an idea. Let's suppose that in each result we'll find a number of results equals to `limit` parameter.\n\nSee [HATEOAS](https://restfulapi.net/hateoas/) for further informations about `links` section.\n\nThe examples shows a subset of the results. Example 1 shows the result when called with `lang=en`, while Example 2 shows the list with `lang=it`.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "maxItems": 300,
                  "items": {
                    "title": "Country",
                    "x-stoplight": {
                      "id": "vpkrf5u530zds"
                    },
                    "type": "object",
                    "description": "Represents a country",
                    "properties": {
                      "country_id": {
                        "type": "string",
                        "pattern": "[A-Za-z0-9-_]+",
                        "maxLength": 10,
                        "description": "ISO code of the country (it, en, de etc.)"
                      },
                      "name": {
                        "type": "string",
                        "pattern": "[A-Za-z '-]+",
                        "maxLength": 100,
                        "description": "The name reflects the value of 'lang' param"
                      },
                      "phone_code": {
                        "type": "string",
                        "pattern": "[0-9]*",
                        "maxLength": 3,
                        "description": "The phone code of the country (link 39 for Italy)"
                      },
                      "deleted": {
                        "type": "boolean",
                        "default": false,
                        "description": "Set to true is we're managing a deleted country like Yugoslavia"
                      }
                    },
                    "required": [
                      "country_id",
                      "name"
                    ]
                  }
                },
                "links": {
                  "type": "array",
                  "maxItems": 20,
                  "items": {
                    "title": "Link",
                    "x-stoplight": {
                      "id": "k4ckz809rljnf"
                    },
                    "type": "object",
                    "description": "  HATEOAS link",
                    "properties": {
                      "href": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 512
                      },
                      "rel": {
                        "type": "string",
                        "pattern": "[A-Za-z0-9 ]+",
                        "maxLength": 20
                      }
                    }
                  }
                },
                "metadata": {
                  "title": "Metadata",
                  "x-stoplight": {
                    "id": "oib14d6qzb5yt"
                  },
                  "type": "object",
                  "description": "Associated with collection responses, but only if needed. As an example, for Province API which will return a small number of results, metadata is quite unuseful.",
                  "properties": {
                    "current_offset": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 100000,
                      "format": "int32",
                      "description": "The current offset of the results shown"
                    },
                    "total_count": {
                      "type": "integer",
                      "format": "int32",
                      "minimum": 0,
                      "maximum": 10000
                    }
                  }
                }
              },
              "required": [
                "data"
              ]
            }
          },
          "application/xml": {
            "schema": {
              "type": "array",
              "maxItems": 300,
              "items": {
                "title": "Country",
                "x-stoplight": {
                  "id": "vpkrf5u530zds"
                },
                "type": "object",
                "description": "Represents a country",
                "properties": {
                  "country_id": {
                    "type": "string",
                    "pattern": "[A-Za-z0-9-_]+",
                    "maxLength": 10,
                    "description": "ISO code of the country (it, en, de etc.)"
                  },
                  "name": {
                    "type": "string",
                    "pattern": "[A-Za-z '-]+",
                    "maxLength": 100,
                    "description": "The name reflects the value of 'lang' param"
                  },
                  "phone_code": {
                    "type": "string",
                    "pattern": "[0-9]*",
                    "maxLength": 3,
                    "description": "The phone code of the country (link 39 for Italy)"
                  },
                  "deleted": {
                    "type": "boolean",
                    "default": false,
                    "description": "Set to true is we're managing a deleted country like Yugoslavia"
                  }
                },
                "required": [
                  "country_id",
                  "name"
                ]
              }
            }
          }
        },
        "headers": {
          "X-RateLimit-Limit": {
            "schema": {
              "type": "string",
              "pattern": "^[A-Za-z0-9-_]+",
              "maxLength": 512
            }
          }
        }
      },
      "City": {
        "description": "Detail of single city. Region, Province (if available) and Country are resolved",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "title": "City",
                  "x-stoplight": {
                    "id": "g1aqefhz9yjqa"
                  },
                  "type": "object",
                  "description": "A city. \n\nA deleted city is a city that no longer exists, possibly for a merge with other cities. Each city should have a unique ID.\n\nGiven that some big cities are associated to more zip codes, the field `zip_codes` is an array.",
                  "properties": {
                    "city_id": {
                      "type": "string",
                      "pattern": "[A-Za-z0-9-_]+",
                      "maxLength": 10,
                      "description": "The city ID. It MUST identify a city in unique way"
                    },
                    "name": {
                      "type": "string",
                      "pattern": "[A-Za-z '-]+",
                      "maxLength": 100,
                      "description": "The name reflects the value of 'lang' param"
                    },
                    "zip_codes": {
                      "type": "array",
                      "description": "Some cities spreads through different zip codes, so we treat it as a list",
                      "maxItems": 100,
                      "items": {
                        "type": "string",
                        "pattern": "[0-9]+",
                        "maxLength": 10
                      }
                    },
                    "state_code": {
                      "type": "string",
                      "maxLength": 10,
                      "pattern": "[A-Za-z0-9]+",
                      "description": "The code used by owning state to identify the city."
                    },
                    "management_code": {
                      "type": "string",
                      "description": "The code used by authorities to identify the city. In Italy could be ISTAT code (known as 'Codice catastale')",
                      "pattern": "[A-Za-z0-9]+",
                      "maxLength": 10
                    },
                    "deleted": {
                      "type": "boolean",
                      "default": false,
                      "description": "Identifies deleted cities, that means cities that are no more valid because of merging with other cities or any other reason"
                    },
                    "extension": {
                      "type": "number",
                      "minimum": 0,
                      "example": 180.07,
                      "description": "The extension of the city, in square metres"
                    },
                    "inhabitants": {
                      "type": "integer",
                      "example": 11201,
                      "exclusiveMaximum": 100000000,
                      "exclusiveMinimum": 0,
                      "format": "int32",
                      "description": "The inhabitants of the city"
                    },
                    "country_id": {
                      "type": "string",
                      "description": "ISO code of country",
                      "pattern": "[A-Za-z0-9-_]+",
                      "maxLength": 10
                    },
                    "country_name": {
                      "type": "string",
                      "pattern": "[A-Za-z0-9 -']+",
                      "maxLength": 100
                    },
                    "region_id": {
                      "type": "string",
                      "pattern": "[A-Za-z0-9-_]+",
                      "maxLength": 10,
                      "description": "The ID of the region"
                    },
                    "region_name": {
                      "type": "string",
                      "pattern": "[A-Za-z0-9 -']+",
                      "maxLength": 100
                    },
                    "province_id": {
                      "type": "string",
                      "pattern": "[A-Za-z0-9-_]+",
                      "maxLength": 10,
                      "description": "Province ID, can be null when data is not available"
                    },
                    "province_name": {
                      "type": "string",
                      "pattern": "[A-Za-z0-9 -']+",
                      "maxLength": 100
                    }
                  },
                  "required": [
                    "city_id",
                    "name"
                  ]
                }
              },
              "required": [
                "data"
              ]
            }
          }
        },
        "headers": {
          "X-RateLimit-Limit": {
            "schema": {
              "type": "string",
              "pattern": "^[A-Za-z0-9-_]+",
              "maxLength": 512
            }
          }
        }
      },
      "Cities": {
        "description": "List of cities. This API can be called filtering by province of a region of by a region. The result is ordered by name, according to the `lang` param.\n\nNotice that the examples shows a little subset of data, not the whole set, so consider it as an example. In particular it's a little set of the cities of Lombardy (Example1) and of Milan province (a district of Lombardy, Example 2).\n\nSee [HATEOAS](https://restfulapi.net/hateoas/) for further informations about `links` section.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "maxItems": 1000,
                  "items": {
                    "title": "City",
                    "x-stoplight": {
                      "id": "g1aqefhz9yjqa"
                    },
                    "type": "object",
                    "description": "A city. \n\nA deleted city is a city that no longer exists, possibly for a merge with other cities. Each city should have a unique ID.\n\nGiven that some big cities are associated to more zip codes, the field `zip_codes` is an array.",
                    "properties": {
                      "city_id": {
                        "type": "string",
                        "pattern": "[A-Za-z0-9-_]+",
                        "maxLength": 10,
                        "description": "The city ID. It MUST identify a city in unique way"
                      },
                      "name": {
                        "type": "string",
                        "pattern": "[A-Za-z '-]+",
                        "maxLength": 100,
                        "description": "The name reflects the value of 'lang' param"
                      },
                      "zip_codes": {
                        "type": "array",
                        "description": "Some cities spreads through different zip codes, so we treat it as a list",
                        "maxItems": 100,
                        "items": {
                          "type": "string",
                          "pattern": "[0-9]+",
                          "maxLength": 10
                        }
                      },
                      "state_code": {
                        "type": "string",
                        "maxLength": 10,
                        "pattern": "[A-Za-z0-9]+",
                        "description": "The code used by owning state to identify the city."
                      },
                      "management_code": {
                        "type": "string",
                        "description": "The code used by authorities to identify the city. In Italy could be ISTAT code (known as 'Codice catastale')",
                        "pattern": "[A-Za-z0-9]+",
                        "maxLength": 10
                      },
                      "deleted": {
                        "type": "boolean",
                        "default": false,
                        "description": "Identifies deleted cities, that means cities that are no more valid because of merging with other cities or any other reason"
                      },
                      "extension": {
                        "type": "number",
                        "minimum": 0,
                        "example": 180.07,
                        "description": "The extension of the city, in square metres"
                      },
                      "inhabitants": {
                        "type": "integer",
                        "example": 11201,
                        "exclusiveMaximum": 100000000,
                        "exclusiveMinimum": 0,
                        "format": "int32",
                        "description": "The inhabitants of the city"
                      },
                      "country_id": {
                        "type": "string",
                        "description": "ISO code of country",
                        "pattern": "[A-Za-z0-9-_]+",
                        "maxLength": 10
                      },
                      "country_name": {
                        "type": "string",
                        "pattern": "[A-Za-z0-9 -']+",
                        "maxLength": 100
                      },
                      "region_id": {
                        "type": "string",
                        "pattern": "[A-Za-z0-9-_]+",
                        "maxLength": 10,
                        "description": "The ID of the region"
                      },
                      "region_name": {
                        "type": "string",
                        "pattern": "[A-Za-z0-9 -']+",
                        "maxLength": 100
                      },
                      "province_id": {
                        "type": "string",
                        "pattern": "[A-Za-z0-9-_]+",
                        "maxLength": 10,
                        "description": "Province ID, can be null when data is not available"
                      },
                      "province_name": {
                        "type": "string",
                        "pattern": "[A-Za-z0-9 -']+",
                        "maxLength": 100
                      }
                    },
                    "required": [
                      "city_id",
                      "name"
                    ]
                  }
                },
                "links": {
                  "type": "array",
                  "maxItems": 20,
                  "items": {
                    "title": "Link",
                    "x-stoplight": {
                      "id": "k4ckz809rljnf"
                    },
                    "type": "object",
                    "description": "  HATEOAS link",
                    "properties": {
                      "href": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 512
                      },
                      "rel": {
                        "type": "string",
                        "pattern": "[A-Za-z0-9 ]+",
                        "maxLength": 20
                      }
                    }
                  }
                },
                "metadata": {
                  "title": "Metadata",
                  "x-stoplight": {
                    "id": "oib14d6qzb5yt"
                  },
                  "type": "object",
                  "description": "Associated with collection responses, but only if needed. As an example, for Province API which will return a small number of results, metadata is quite unuseful.",
                  "properties": {
                    "current_offset": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 100000,
                      "format": "int32",
                      "description": "The current offset of the results shown"
                    },
                    "total_count": {
                      "type": "integer",
                      "format": "int32",
                      "minimum": 0,
                      "maximum": 10000
                    }
                  }
                }
              },
              "required": [
                "data"
              ]
            }
          }
        },
        "headers": {
          "X-RateLimit-Limit": {
            "schema": {
              "type": "string",
              "pattern": "^[A-Za-z0-9-_]+",
              "maxLength": 512
            }
          }
        }
      },
      "Regions": {
        "description": "List of regions. The names reflect the value of `lang` param.\n\nThe result is always ordered by name\n\nExample 1 shows italian regions when `lang=it`.\nExample 2 shows german lander when `lang=de`\nExample 3 shows italian regions when `lang=en` (notice the different order of the collection, if compared to the results when lang=it)\n\nSee [HATEOAS](https://restfulapi.net/hateoas/) for further informations about `links` section.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "maxItems": 200,
                  "items": {
                    "title": "Region",
                    "x-stoplight": {
                      "id": "ik33rb3jg6t03"
                    },
                    "type": "object",
                    "description": "Region / State (for US or other federated countries).\n\nThis API does not force region_id to have a particular format, but implementors have to make sure it will be unique for that region state. It could be a random alphanumeric code ('abc012') or could be something that recalls countries (es 'us-ak' for Alaska, 'it-lo' for Lombardy etc). It is purely an implementor's choice, the important is that the code is unique.",
                    "properties": {
                      "region_id": {
                        "type": "string",
                        "pattern": "[A-Za-z0-9-_]+",
                        "maxLength": 10,
                        "description": "The region ID. It MUST identify a region/state in unique way."
                      },
                      "name": {
                        "type": "string",
                        "pattern": "[A-Za-z '-]+",
                        "maxLength": 100,
                        "description": "The name reflects the value of 'lang' param"
                      },
                      "deleted": {
                        "type": "boolean",
                        "default": false,
                        "description": "Set to true is we're managing a deleted region"
                      },
                      "country_id": {
                        "type": "string",
                        "pattern": "[A-Za-z0-9-_]+",
                        "maxLength": 10,
                        "description": "The country ID (ISO)"
                      }
                    },
                    "required": [
                      "region_id",
                      "name"
                    ]
                  }
                }
              },
              "required": [
                "data"
              ]
            }
          }
        },
        "headers": {
          "X-RateLimit-Limit": {
            "schema": {
              "type": "string",
              "pattern": "^[A-Za-z0-9-_]+",
              "maxLength": 512
            }
          }
        }
      },
      "Provinces": {
        "description": "List of provinces, if supported by specific country, ordered by name. `links` section could be empty given the limited number of results.\n\nSee [HATEOAS](https://restfulapi.net/hateoas/) for further informations about `links` section.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "maxItems": 300,
                  "items": {
                    "title": "Province",
                    "x-stoplight": {
                      "id": "bwezl8ap9464m"
                    },
                    "type": "object",
                    "description": "Province, for countries we need this concept",
                    "properties": {
                      "province_id": {
                        "type": "string",
                        "pattern": "[A-Za-z0-9-_]+",
                        "maxLength": 10,
                        "description": "The province ID. It MUST identify a province in unique way"
                      },
                      "name": {
                        "type": "string",
                        "pattern": "[A-Za-z '-]+",
                        "maxLength": 100,
                        "description": "The name reflects the value of 'lang' param"
                      },
                      "deleted": {
                        "type": "boolean",
                        "default": false,
                        "description": "Set to true is we're managing a deleted province"
                      },
                      "code": {
                        "type": "string",
                        "pattern": "[A-Za-z]+",
                        "maxLength": 5,
                        "description": "The mnemonical code of the province. For italian provine we have MI, NA, VE and so on"
                      },
                      "country_id": {
                        "type": "string",
                        "pattern": "[A-Za-z0-9-_]+",
                        "maxLength": 10
                      },
                      "region_id": {
                        "type": "string",
                        "pattern": "[A-Za-z0-9-_]+",
                        "maxLength": 10
                      }
                    },
                    "required": [
                      "province_id",
                      "name",
                      "code"
                    ]
                  }
                }
              },
              "required": [
                "data"
              ]
            }
          }
        },
        "headers": {
          "X-RateLimit-Limit": {
            "schema": {
              "type": "string",
              "pattern": "^[A-Za-z0-9-_]+",
              "maxLength": 512
            }
          }
        }
      }
    },
    "securitySchemes": {
      "x-geoservice-key": {
        "name": "api-key",
        "type": "apiKey",
        "in": "header",
        "description": ""
      }
    },
    "parameters": {
      "lang": {
        "name": "lang",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "default": "it",
          "pattern": "^[a-z]{2}(-[a-z]{2})?$",
          "minLength": 2,
          "maxLength": 5
        },
        "description": "the language in which we want to receive the data, expressed in iso 639-1 format",
        "allowEmptyValue": true
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "number",
          "minimum": 0,
          "maximum": 50,
          "default": 20
        },
        "description": "the page size, for collection APIs",
        "allowEmptyValue": true
      },
      "offset": {
        "name": "offset",
        "in": "query",
        "required": false,
        "schema": {
          "type": "number",
          "maximum": 100000,
          "default": 0
        },
        "description": "the offset to start",
        "allowEmptyValue": true
      }
    },
    "requestBodies": {
      "CityQuery": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "city_name": {
                  "type": "string",
                  "pattern": "[A-Za-z0-9 ,']+",
                  "maxLength": 100
                },
                "province_name": {
                  "type": "string",
                  "pattern": "[A-Za-z0-9 ,']+",
                  "maxLength": 100
                },
                "region_name": {
                  "type": "string",
                  "pattern": "[A-Za-z0-9 ,']+",
                  "maxLength": 100
                },
                "country_id": {
                  "type": "string",
                  "pattern": "[a-z]{2}",
                  "maxLength": 2,
                  "description": "ISO ID of the target country"
                }
              },
              "required": [
                "country_id"
              ]
            }
          }
        },
        "description": "The body of the endpoint that allows to query the database city by name.\nNone of the properties, except for `country_id`, is mandatory, but at least one should be populated, in order to avoid to retrieve all cities of a country."
      },
      "TaxCodeValidation": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "country_id": {
                  "type": "string",
                  "pattern": "[A-Za-z]{2}",
                  "maxLength": 2
                },
                "tax_code": {
                  "type": "string",
                  "pattern": "[A-Za-z0-9]+",
                  "maxLength": 20
                }
              }
            }
          }
        },
        "description": "Body of tax code validation PUT endpoint"
      }
    }
  },
  "x-internal": false,
  "security": [
    {
      "API Key - 1": []
    }
  ]
}